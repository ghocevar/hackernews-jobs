{"version":3,"sources":["webpack:///./datasources/hnApi.js","webpack:///./resolvers/index.js","webpack:///./typedefs/index.js","webpack:///external \"apollo-datasource-rest\"","webpack:///external \"apollo-server-lambda\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./graphql.js"],"names":["HackerNewsAPI","RESTDataSource","constructor","baseURL","getAllArticleIds","result","get","getArticle","articleId","getAllArticles","articleIds","Promise","all","map","Query","allArticles","_","__","dataSources","hackernews","gql","server","ApolloServer","typeDefs","resolvers","exports","graphqlHandler","createHandler","cors","origin","credentials"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA,MAAMA,aAAN,SAA4BC,kEAA5B,CAA2C;AACzCC,aAAW,GAAG;AACZ;AACA,SAAKC,OAAL,GAAe,wCAAf;AACD;;AAEqB,QAAhBC,gBAAgB,GAAG;AACvB,UAAMC,MAAM,GAAG,MAAM,KAAKC,GAAL,CAAS,iBAAT,CAArB;AACA,WAAOD,MAAP;AACD;;AAEe,QAAVE,UAAU,CAACC,SAAD,EAAY;AAC1B,UAAMH,MAAM,GAAG,MAAM,KAAKC,GAAL,CAAU,QAAOE,SAAU,OAA3B,CAArB;AACA,WAAOH,MAAP;AACD;;AAEmB,QAAdI,cAAc,GAAG;AACrB,UAAMC,UAAU,GAAG,MAAM,KAAKN,gBAAL,EAAzB;AAEA,WAAOO,OAAO,CAACC,GAAR,CACLF,UAAU,CAACG,GAAX,CAAgBL,SAAD,IAAe,KAAKD,UAAL,CAAgBC,SAAhB,CAA9B,CADK,CAAP;AAGD;;AAtBwC;;AAyB3C,iEAAeR,aAAf,E;;;;;;;;;;;;;;AC3BA,iEAAe;AACbc,OAAK,EAAE;AACLC,eAAW,EAAE,CAACC,CAAD,EAAIC,EAAJ,EAAQ;AAAEC;AAAF,KAAR,KACXA,WAAW,CAACC,UAAZ,CAAuBV,cAAvB;AAFG;AADM,CAAf,E;;;;;;;;;;;;;;;;ACAA;AAEA,iEAAeW,qDAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA,E;;;;;;;;;;ACFA,oD;;;;;;;;;;ACAA,kD;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;ACNA;AAEA;AACA;AACA;AAEA,MAAMC,MAAM,GAAG,IAAIC,8DAAJ,CAAiB;AAC9BC,UAD8B;AAE9BC,WAF8B;AAG9BN,aAAW,EAAE,OAAO;AAAEC,cAAU,EAAE,IAAInB,uDAAJ;AAAd,GAAP;AAHiB,CAAjB,CAAf;AAMAyB,OAAO,CAACC,cAAR,GAAyBL,MAAM,CAACM,aAAP,CAAqB;AAC5CC,MAAI,EAAE;AACJC,UAAM,EAAE,GADJ;AAEJC,eAAW,EAAE;AAFT;AADsC,CAArB,CAAzB,C","file":"graphql.js","sourcesContent":["import { RESTDataSource } from 'apollo-datasource-rest';\r\n\r\nclass HackerNewsAPI extends RESTDataSource {\r\n  constructor() {\r\n    super();\r\n    this.baseURL = 'https://hacker-news.firebaseio.com/v0/';\r\n  }\r\n\r\n  async getAllArticleIds() {\r\n    const result = await this.get('jobstories.json');\r\n    return result;\r\n  }\r\n\r\n  async getArticle(articleId) {\r\n    const result = await this.get(`item/${articleId}.json`);\r\n    return result;\r\n  }\r\n\r\n  async getAllArticles() {\r\n    const articleIds = await this.getAllArticleIds();\r\n\r\n    return Promise.all(\r\n      articleIds.map((articleId) => this.getArticle(articleId))\r\n    );\r\n  }\r\n}\r\n\r\nexport default HackerNewsAPI;\r\n","export default {\r\n  Query: {\r\n    allArticles: (_, __, { dataSources }) =>\r\n      dataSources.hackernews.getAllArticles(),\r\n  },\r\n};\r\n","import { gql } from 'apollo-server-lambda';\r\n\r\nexport default gql`\r\n  type Query {\r\n    allArticles: [Article!]!\r\n  }\r\n\r\n  type Article {\r\n    id: ID!\r\n    title: String\r\n    by: String\r\n    url: String\r\n    time: String\r\n  }\r\n`;\r\n","module.exports = require(\"apollo-datasource-rest\");;","module.exports = require(\"apollo-server-lambda\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ApolloServer } from 'apollo-server-lambda';\r\n\r\nimport typeDefs from './typedefs';\r\nimport resolvers from './resolvers';\r\nimport HackerNewsAPI from './datasources/hnApi';\r\n\r\nconst server = new ApolloServer({\r\n  typeDefs,\r\n  resolvers,\r\n  dataSources: () => ({ hackernews: new HackerNewsAPI() }),\r\n});\r\n\r\nexports.graphqlHandler = server.createHandler({\r\n  cors: {\r\n    origin: '*',\r\n    credentials: true,\r\n  },\r\n});\r\n"],"sourceRoot":""}